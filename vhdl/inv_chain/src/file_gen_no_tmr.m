clc;
close all;
clear all;

%Parameters
nb_reg=10;


%-------------------------------------------
%- VHDL file generation
%-------------------------------------------


fid=fopen('top.vhd','w');
fprintf(fid,'library IEEE;                                                                                                                            \n');
fprintf(fid,'use IEEE.std_logic_1164.all;                                                                                                             \n');
fprintf(fid,'use IEEE.numeric_std.all;                                                                                                                \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'entity top is                                                                                                                            \n');
fprintf(fid,' port (                                                                                                                                  \n');
fprintf(fid,'            clk             : in std_logic;                                                                                              \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'            data_in         : in std_logic;                                                                                              \n');
fprintf(fid,'			data_out		: out std_logic_vector(3 downto 0)                                                                            \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,' );                                                                                                                                      \n');
fprintf(fid,'end entity top;                                                                                                                          \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'architecture rtl of top is                                                                                                               \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'constant USE_MITIGATION             : integer:=0;                                                                                        \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'constant nb_reg                     : integer:=%d; --(nb_reg-1 LUT on Xilinx target without mitigation)                                  \n',nb_reg);
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'--signal lut_in                   : std_logic_vector(nb_reg-1 downto 0);                                                                 \n');
fprintf(fid,'--signal lut_out                  : std_logic_vector(nb_reg-1 downto 0);                                                                 \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'signal registers                    : std_logic_vector(nb_reg-1 downto 0);                                                               \n');
fprintf(fid,'--signal registers_d1             : std_logic_vector(nb_reg-1 downto 0);                                                                 \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'type tmr_reg_type                   is array (0 to 2) of std_logic_vector(nb_reg-1 downto 0);                                            \n');
fprintf(fid,'signal tmr_registers                : tmr_reg_type;                                                                                      \n');
fprintf(fid,'signal local_tmr_voter              : std_logic_vector(nb_reg-1 downto 0);                                                               \n');
fprintf(fid,'signal global_tmr_voter             : tmr_reg_type;                                                                                      \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'attribute keep                      : string;                                                                                            \n');
fprintf(fid,'attribute keep of registers         : signal is "true";                                                                                  \n');
fprintf(fid,'attribute keep of tmr_registers     : signal is "true";                                                                                  \n');
fprintf(fid,'attribute keep of local_tmr_voter   : signal is "true";                                                                                  \n');
fprintf(fid,'attribute keep of global_tmr_voter  : signal is "true";                                                                                  \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'begin                                                                                                                                    \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'----------------------------------------------------------------------------------------------------------------------------             \n');
fprintf(fid,'--                                                                                                                                       \n');
fprintf(fid,'--                                                                                                                                       \n');
fprintf(fid,'--              NO MITIGATION IN THE DESIGN                                                                                              \n');
fprintf(fid,'--                                                                                                                                       \n');
fprintf(fid,'--                                                                                                                                       \n');
fprintf(fid,'----------------------------------------------------------------------------------------------------------------------------             \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'NO_MITIGATION: if USE_MITIGATION=0 generate                                                                                              \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    -- Input                                                                                                                             \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    registers(0) <= data_in;                                                                                                             \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    -- Combinatiorial + Registers                                                                                                        \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    process(clk)                                                                                                                         \n');
fprintf(fid,'    begin                                                                                                                                \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'        if rising_edge(clk) then                                                                                                         \n');
fprintf(fid,'                                                                                                                                         \n');
%fprintf(fid,'            for I in 1 to nb_reg-1 loop                                                                                                  \n');
%fprintf(fid,'                registers(I)    <= not(registers(I-1));                                                                                  \n');
%fprintf(fid,'            end loop;                                                                                                                    \n');
for k=1:nb_reg-1
    fprintf(fid,'                registers(%d)    <= not(registers(%d));                                                                              \n',k,k-1);
end;
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'        end if;                                                                                                                          \n');
fprintf(fid,'    end process;                                                                                                                         \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    -- Outputs                                                                                                                           \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    process(clk)                                                                                                                         \n');
fprintf(fid,'    begin                                                                                                                                \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'        if rising_edge(clk) then                                                                                                         \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'            data_out(0) <= registers(nb_reg-4);                                                                                          \n');
fprintf(fid,'            data_out(1) <= registers(nb_reg-3);                                                                                          \n');
fprintf(fid,'            data_out(2) <= registers(nb_reg-2);                                                                                          \n');
fprintf(fid,'            data_out(3) <= registers(nb_reg-1);                                                                                          \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'        end if;                                                                                                                          \n');
fprintf(fid,'    end process;                                                                                                                         \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'end generate NO_MITIGATION;                                                                                                              \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'----------------------------------------------------------------------------------------------------------------------------             \n');
fprintf(fid,'--                                                                                                                                       \n');
fprintf(fid,'--                                                                                                                                       \n');
fprintf(fid,'--              Local TMR                                                                                                                \n');
fprintf(fid,'--                                                                                                                                       \n');
fprintf(fid,'--                                                                                                                                       \n');
fprintf(fid,'----------------------------------------------------------------------------------------------------------------------------             \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'LOCAL_TMR_MITIGATION: if USE_MITIGATION=1 generate                                                                                       \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    -- Input                                                                                                                             \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    -- Combinatiorial + Registers                                                                                                        \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    process(clk)                                                                                                                         \n');
fprintf(fid,'    begin                                                                                                                                \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'        if rising_edge(clk) then                                                                                                         \n');
fprintf(fid,'                                                                                                                                         \n');
%fprintf(fid,'            for I in 1 to nb_reg-1 loop                                                                                                  \n');
%fprintf(fid,'                tmr_registers(0)(I)    <= not(local_tmr_voter(I-1));                                                                           \n');
%fprintf(fid,'                tmr_registers(1)(I)    <= not(local_tmr_voter(I-1));                                                                           \n');
%fprintf(fid,'                tmr_registers(2)(I)    <= not(local_tmr_voter(I-1));                                                                           \n');
%fprintf(fid,'            end loop;                                                                                                                    \n');
for k=1:nb_reg-1
    fprintf(fid,'                tmr_registers(0)(%d)    <= not(local_tmr_voter(%d));                                                                           \n',k,k-1);
    fprintf(fid,'                tmr_registers(1)(%d)    <= not(local_tmr_voter(%d));                                                                           \n',k,k-1);
    fprintf(fid,'                tmr_registers(2)(%d)    <= not(local_tmr_voter(%d));                                                                           \n',k,k-1);  
    fprintf(fid,' \n');  
end;
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'        end if;                                                                                                                          \n');
fprintf(fid,'    end process;                                                                                                                         \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    -- Voter                                                                                                                             \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
%fprintf(fid,'    VOTER_LOOP : for I in 1 downto nb_reg-1 generate                                                                                     \n');
%fprintf(fid,'                                                                                                                                         \n');
%fprintf(fid,'        local_tmr_voter(0)  <= data_in;                                                                                                        \n');
%fprintf(fid,'                                                                                                                                         \n');
%fprintf(fid,'        local_tmr_voter(I)  <=    (tmr_registers(0)(I) and tmr_registers(1)(I)) or                                                             \n');
%fprintf(fid,'                            (tmr_registers(1)(I) and tmr_registers(2)(I)) or                                                             \n');
%fprintf(fid,'                            (tmr_registers(0)(I) and tmr_registers(2)(I));                                                               \n');
%fprintf(fid,'                                                                                                                                         \n');
%fprintf(fid,'    end generate VOTER_LOOP;                                                                                                             \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'        local_tmr_voter(0)  <= data_in;                                                                                                        \n');
for k=1:nb_reg-1
    fprintf(fid,'                                                                                                                                         \n');
    fprintf(fid,'        local_tmr_voter(%d)  <=    (tmr_registers(0)(%d) and tmr_registers(1)(%d)) or                                                             \n',k,k,k);
    fprintf(fid,'                            (tmr_registers(1)(%d) and tmr_registers(2)(%d)) or                                                             \n',k,k);
    fprintf(fid,'                            (tmr_registers(0)(%d) and tmr_registers(2)(%d));                                                               \n',k,k);
end;
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    -- Outputs                                                                                                                           \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'    data_out(0) <= local_tmr_voter(nb_reg-4);                                                                                                  \n');
fprintf(fid,'    data_out(1) <= local_tmr_voter(nb_reg-3);                                                                                                  \n');
fprintf(fid,'    data_out(2) <= local_tmr_voter(nb_reg-2);                                                                                                  \n');
fprintf(fid,'    data_out(3) <= local_tmr_voter(nb_reg-1);                                                                                                  \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'end generate LOCAL_TMR_MITIGATION;                                                                                                       \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'----------------------------------------------------------------------------------------------------------------------------             \n');
fprintf(fid,'--                                                                                                                                       \n');
fprintf(fid,'--                                                                                                                                       \n');
fprintf(fid,'--              Global TMR                                                                                                               \n');
fprintf(fid,'--                                                                                                                                       \n');
fprintf(fid,'--                                                                                                                                       \n');
fprintf(fid,'----------------------------------------------------------------------------------------------------------------------------             \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'GLOBAL_TMR_MITIGATION: if USE_MITIGATION=2 generate                                                                                      \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    -- Input                                                                                                                             \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    -- Combinatiorial + Registers                                                                                                        \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    process(clk)                                                                                                                         \n');
fprintf(fid,'    begin                                                                                                                                \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'        if rising_edge(clk) then                                                                                                         \n');
fprintf(fid,'                                                                                                                                         \n');
%fprintf(fid,'            for I in 1 to nb_reg-1 loop                                                                                                  \n');
%fprintf(fid,'                tmr_registers(0)(I)    <= not(local_tmr_voter(I-1));                                                                           \n');
%fprintf(fid,'                tmr_registers(1)(I)    <= not(local_tmr_voter(I-1));                                                                           \n');
%fprintf(fid,'                tmr_registers(2)(I)    <= not(local_tmr_voter(I-1));                                                                           \n');
%fprintf(fid,'            end loop;                                                                                                                    \n');
for k=1:nb_reg-1
    fprintf(fid,'                tmr_registers(0)(%d)    <= not(global_tmr_voter(0)(%d));                                                             \n',k,k-1);
    fprintf(fid,'                tmr_registers(1)(%d)    <= not(global_tmr_voter(1)(%d));                                                             \n',k,k-1);
    fprintf(fid,'                tmr_registers(2)(%d)    <= not(global_tmr_voter(2)(%d));                                                             \n',k,k-1);  
    fprintf(fid,' \n');  
end;
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'        end if;                                                                                                                          \n');
fprintf(fid,'    end process;                                                                                                                         \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    -- Voter                                                                                                                             \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
%fprintf(fid,'    VOTER_LOOP : for I in 1 downto nb_reg-1 generate                                                                                     \n');
%fprintf(fid,'                                                                                                                                         \n');
%fprintf(fid,'        local_tmr_voter(0)  <= data_in;                                                                                                        \n');
%fprintf(fid,'                                                                                                                                         \n');
%fprintf(fid,'        local_tmr_voter(I)  <=    (tmr_registers(0)(I) and tmr_registers(1)(I)) or                                                             \n');
%fprintf(fid,'                            (tmr_registers(1)(I) and tmr_registers(2)(I)) or                                                             \n');
%fprintf(fid,'                            (tmr_registers(0)(I) and tmr_registers(2)(I));                                                               \n');
%fprintf(fid,'                                                                                                                                         \n');
%fprintf(fid,'    end generate VOTER_LOOP;                                                                                                             \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'        global_tmr_voter(0)(0)  <= data_in;                                                                                              \n');
fprintf(fid,'        global_tmr_voter(1)(0)  <= data_in;                                                                                              \n');
fprintf(fid,'        global_tmr_voter(2)(0)  <= data_in;                                                                                              \n');
for k=1:nb_reg-1
    fprintf(fid,'                                                                                                                                     \n');
    fprintf(fid,'        global_tmr_voter(0)(%d)  <=    (tmr_registers(0)(%d) and tmr_registers(1)(%d)) or                                            \n',k,k,k);
    fprintf(fid,'                            (tmr_registers(1)(%d) and tmr_registers(2)(%d)) or                                                       \n',k,k);
    fprintf(fid,'                            (tmr_registers(0)(%d) and tmr_registers(2)(%d));                                                         \n',k,k);
end;
fprintf(fid,'                                                                                                                                         \n');
for k=1:nb_reg-1
    fprintf(fid,'                                                                                                                                     \n');
    fprintf(fid,'        global_tmr_voter(1)(%d)  <=    (tmr_registers(0)(%d) and tmr_registers(1)(%d)) or                                            \n',k,k,k);
    fprintf(fid,'                            (tmr_registers(1)(%d) and tmr_registers(2)(%d)) or                                                       \n',k,k);
    fprintf(fid,'                            (tmr_registers(0)(%d) and tmr_registers(2)(%d));                                                         \n',k,k);
end;
for k=1:nb_reg-1
    fprintf(fid,'                                                                                                                                     \n');
    fprintf(fid,'        global_tmr_voter(2)(%d)  <=    (tmr_registers(0)(%d) and tmr_registers(1)(%d)) or                                            \n',k,k,k);
    fprintf(fid,'                            (tmr_registers(1)(%d) and tmr_registers(2)(%d)) or                                                       \n',k,k);
    fprintf(fid,'                            (tmr_registers(0)(%d) and tmr_registers(2)(%d));                                                         \n',k,k);
end;
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'    -- Outputs                                                                                                                           \n');
fprintf(fid,'    ------------------------------------------                                                                                           \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'    data_out(0) <= global_tmr_voter(0)(nb_reg-4);                                                                                        \n');
fprintf(fid,'    data_out(1) <= global_tmr_voter(1)(nb_reg-3);                                                                                        \n');
fprintf(fid,'    data_out(2) <= global_tmr_voter(2)(nb_reg-2);                                                                                        \n');
fprintf(fid,'    data_out(3) <= ''0'';                                                                                                                \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'end generate GLOBAL_TMR_MITIGATION;                                                                                                      \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'                                                                                                                                         \n');
fprintf(fid,'end rtl;                                                                                                                                 \n');
fclose(fid);
